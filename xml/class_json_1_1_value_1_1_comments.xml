<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="class_json_1_1_value_1_1_comments" kind="class" language="C++" prot="private">
    <compoundname>Json::Value::Comments</compoundname>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_json_1_1_value_1_1_comments_1aa69891b207184e09a1c0ba43d5cde4c9" prot="private" static="no">
        <type>std::array&lt; <ref refid="namespace_json_1ab8386dad87bef4a96620c2f5e860f112" kindref="member">String</ref>, <ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351abcbd3eb00417335e094e4a03379659b5" kindref="member">numberOfCommentPlacement</ref> &gt;</type>
        <definition>using Json::Value::Comments::Array =  std::array&lt;String, numberOfCommentPlacement&gt;</definition>
        <argsstring></argsstring>
        <name>Array</name>
        <qualifiedname>Json::Value::Comments::Array</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="428" column="5" bodyfile="include/json/value.h" bodystart="428" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_json_1_1_value_1_1_comments_1ad12fe68bda5fef0d094a559bbe9dba0b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_json_1_1_value_1_1_comments_1aa69891b207184e09a1c0ba43d5cde4c9" kindref="member">Array</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Array&gt; Json::Value::Comments::ptr_</definition>
        <argsstring></argsstring>
        <name>ptr_</name>
        <qualifiedname>Json::Value::Comments::ptr_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="429" column="21" bodyfile="include/json/value.h" bodystart="429" bodyend="-1"/>
        <referencedby refid="class_json_1_1_value_1_1_comments_1a4ef41f461812975989bc6378b613791e" compoundref="json__value_8cpp" startline="1294" endline="1297">operator=</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_json_1_1_value_1_1_comments_1a3a85ad9ffb3f5c308dbaa4e17e5043fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::Value::Comments::Comments</definition>
        <argsstring>()=default</argsstring>
        <name>Comments</name>
        <qualifiedname>Json::Value::Comments::Comments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="418" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_1_1_comments_1a93c119f71b022940fc9576cf1e688576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Json::Value::Comments::Comments</definition>
        <argsstring>(const Comments &amp;that)</argsstring>
        <name>Comments</name>
        <qualifiedname>Json::Value::Comments::Comments</qualifiedname>
        <param>
          <type>const <ref refid="class_json_1_1_value_1_1_comments" kindref="compound">Comments</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="419" column="5" bodyfile="src/lib_json/json_value.cpp" bodystart="1288" bodyend="1289"/>
        <references refid="namespace_json_1ace1c06a193e376c0a7bb9ece706c4fb5" compoundref="json__value_8cpp" startline="45" endline="51">Json::cloneUnique</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_1_1_comments_1a98573ee604b56b7a55b3c36398f0d5f7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>Json::Value::Comments::Comments</definition>
        <argsstring>(Comments &amp;&amp;that) noexcept</argsstring>
        <name>Comments</name>
        <qualifiedname>Json::Value::Comments::Comments</qualifiedname>
        <param>
          <type><ref refid="class_json_1_1_value_1_1_comments" kindref="compound">Comments</ref> &amp;&amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="420" column="5" bodyfile="src/lib_json/json_value.cpp" bodystart="1291" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_1_1_comments_1a4ef41f461812975989bc6378b613791e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_1_1_comments" kindref="compound">Comments</ref> &amp;</type>
        <definition>Value::Comments &amp; Json::Value::Comments::operator=</definition>
        <argsstring>(const Comments &amp;that)</argsstring>
        <name>operator=</name>
        <qualifiedname>Json::Value::Comments::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_json_1_1_value_1_1_comments" kindref="compound">Comments</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="421" column="14" bodyfile="src/lib_json/json_value.cpp" bodystart="1294" bodyend="1297"/>
        <references refid="namespace_json_1ace1c06a193e376c0a7bb9ece706c4fb5" compoundref="json__value_8cpp" startline="45" endline="51">Json::cloneUnique</references>
        <references refid="class_json_1_1_value_1_1_comments_1ad12fe68bda5fef0d094a559bbe9dba0b" compoundref="value_8h" startline="429">ptr_</references>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_1_1_comments_1a7a77da3f05b2ee0abc7892cdfe563093" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_json_1_1_value_1_1_comments" kindref="compound">Comments</ref> &amp;</type>
        <definition>Value::Comments &amp; Json::Value::Comments::operator=</definition>
        <argsstring>(Comments &amp;&amp;that) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>Json::Value::Comments::operator=</qualifiedname>
        <param>
          <type><ref refid="class_json_1_1_value_1_1_comments" kindref="compound">Comments</ref> &amp;&amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="422" column="14" bodyfile="src/lib_json/json_value.cpp" bodystart="1299" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_1_1_comments_1a9472048fbb3d4c9f5c2c5567a43528a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Json::Value::Comments::has</definition>
        <argsstring>(CommentPlacement slot) const</argsstring>
        <name>has</name>
        <qualifiedname>Json::Value::Comments::has</qualifiedname>
        <param>
          <type><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref></type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="423" column="10" bodyfile="src/lib_json/json_value.cpp" bodystart="1304" bodyend="1306"/>
        <referencedby refid="class_json_1_1_value_1a65d8e3ab6a5871cbd019a3e0f0b944a3" compoundref="json__value_8cpp" startline="1332" endline="1334">Json::Value::hasComment</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_1_1_comments_1a34b67abb6e65785cc9a71cbdd1aa441d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_json_1ab8386dad87bef4a96620c2f5e860f112" kindref="member">String</ref></type>
        <definition>String Json::Value::Comments::get</definition>
        <argsstring>(CommentPlacement slot) const</argsstring>
        <name>get</name>
        <qualifiedname>Json::Value::Comments::get</qualifiedname>
        <param>
          <type><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref></type>
          <declname>slot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="424" column="12" bodyfile="src/lib_json/json_value.cpp" bodystart="1308" bodyend="1312"/>
        <referencedby refid="class_json_1_1_value_1a43a09822e756ba45deff61195a9ba12d" compoundref="json__value_8cpp" startline="1336" endline="1338">Json::Value::getComment</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_json_1_1_value_1_1_comments_1a14c896a3c305fd964b0bcad4ec31ec19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Json::Value::Comments::set</definition>
        <argsstring>(CommentPlacement slot, String comment)</argsstring>
        <name>set</name>
        <qualifiedname>Json::Value::Comments::set</qualifiedname>
        <param>
          <type><ref refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351" kindref="member">CommentPlacement</ref></type>
          <declname>slot</declname>
        </param>
        <param>
          <type><ref refid="namespace_json_1ab8386dad87bef4a96620c2f5e860f112" kindref="member">String</ref></type>
          <declname>comment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/json/value.h" line="425" column="10" bodyfile="src/lib_json/json_value.cpp" bodystart="1314" bodyend="1320"/>
        <references refid="namespace_json_1a4fc417c23905b2ae9e2c47d197a45351abcbd3eb00417335e094e4a03379659b5" compoundref="value_8h" startline="89">Json::numberOfCommentPlacement</references>
        <referencedby refid="class_json_1_1_value_1aeec137a52217bf72e9000d75eef5e46e" compoundref="json__value_8cpp" startline="1322" endline="1330">Json::Value::setComment</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Json::Value::Comments</label>
        <link refid="class_json_1_1_value_1_1_comments"/>
        <childnode refid="2" relation="usage">
          <edgelabel>ptr_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>T</label>
      </node>
      <node id="3">
        <label>std::array&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::unique_ptr&lt; T &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::unique_ptr&lt; Array &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; Array &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/json/value.h" line="416" column="3" bodyfile="include/json/value.h" bodystart="416" bodyend="430"/>
    <listofallmembers>
      <member refid="class_json_1_1_value_1_1_comments_1aa69891b207184e09a1c0ba43d5cde4c9" prot="private" virt="non-virtual"><scope>Json::Value::Comments</scope><name>Array</name></member>
      <member refid="class_json_1_1_value_1_1_comments_1a3a85ad9ffb3f5c308dbaa4e17e5043fa" prot="public" virt="non-virtual"><scope>Json::Value::Comments</scope><name>Comments</name></member>
      <member refid="class_json_1_1_value_1_1_comments_1a93c119f71b022940fc9576cf1e688576" prot="public" virt="non-virtual"><scope>Json::Value::Comments</scope><name>Comments</name></member>
      <member refid="class_json_1_1_value_1_1_comments_1a98573ee604b56b7a55b3c36398f0d5f7" prot="public" virt="non-virtual"><scope>Json::Value::Comments</scope><name>Comments</name></member>
      <member refid="class_json_1_1_value_1_1_comments_1a34b67abb6e65785cc9a71cbdd1aa441d" prot="public" virt="non-virtual"><scope>Json::Value::Comments</scope><name>get</name></member>
      <member refid="class_json_1_1_value_1_1_comments_1a9472048fbb3d4c9f5c2c5567a43528a0" prot="public" virt="non-virtual"><scope>Json::Value::Comments</scope><name>has</name></member>
      <member refid="class_json_1_1_value_1_1_comments_1a4ef41f461812975989bc6378b613791e" prot="public" virt="non-virtual"><scope>Json::Value::Comments</scope><name>operator=</name></member>
      <member refid="class_json_1_1_value_1_1_comments_1a7a77da3f05b2ee0abc7892cdfe563093" prot="public" virt="non-virtual"><scope>Json::Value::Comments</scope><name>operator=</name></member>
      <member refid="class_json_1_1_value_1_1_comments_1ad12fe68bda5fef0d094a559bbe9dba0b" prot="private" virt="non-virtual"><scope>Json::Value::Comments</scope><name>ptr_</name></member>
      <member refid="class_json_1_1_value_1_1_comments_1a14c896a3c305fd964b0bcad4ec31ec19" prot="public" virt="non-virtual"><scope>Json::Value::Comments</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
